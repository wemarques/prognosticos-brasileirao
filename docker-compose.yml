version: '3.8'

services:
  # Aplicação Streamlit
  app:
    build: .
    container_name: prognosticos-brasileirao
    ports:
      - "8501:8501"
    environment:
      - PYTHONUNBUFFERED=1
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - FOOTBALL_DATA_API_KEY=${FOOTBALL_DATA_API_KEY}
      - FOOTYSTATS_API_KEY=${FOOTYSTATS_API_KEY}
      - ODDS_API_KEY=${ODDS_API_KEY}
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./cache:/app/cache
    networks:
      - prognosticos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: prognosticos-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - prognosticos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL para armazenar métricas (opcional)
  postgres:
    image: postgres:15-alpine
    container_name: prognosticos-postgres
    environment:
      - POSTGRES_DB=prognosticos
      - POSTGRES_USER=prognosticos
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-prognosticos123}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - prognosticos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prognosticos"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis-data:
  postgres-data:

networks:
  prognosticos-network:
    driver: bridge